DROP PROCEDURE IF EXISTS ORDERS ;
DELIMITER $$
CREATE  PROCEDURE ORDERS(ORDER_ID INT,SEAT INT, ITEM MEDIUMTEXT,QUANTITY MEDIUMTEXT)
 BEGIN
 DECLARE MENU_ID INT;
 DECLARE FOOD_ID INT;
 DECLARE COUNTS INT;
 DECLARE REM INT;
 DECLARE CHARGE INT;
 DECLARE TOTAL INT;
 DECLARE AMOUNT_REQ INT;
 
 SELECT CHECK_SERVICE();
 
 SET MENU_ID=(SELECT ID  FROM MENU_ITEMS WHERE FOOD_ITEMS=ITEM);
 SET FOOD_ID=(SELECT FOOD_TYPE FROM ITEM_QUANTITY WHERE MENU_TYPE=MENU_ID AND FOOD_TYPE IN(SELECT ID FROM SESSION_SCHEDULE WHERE CURTIME() BETWEEN START_TIME AND END_TIME));
 
 IF (SEAT_VERIFICATION(SEAT))
 THEN
        UPDATE SEAT SET STATUS='UNAVAILABLE' WHERE  SEAT_NO=SEAT;

 IF ITEM IN(SELECT FOOD_ITEM FROM ORDER_RECORDS WHERE ORDER_DATE=CURDATE())
 THEN
	SELECT SUM(QTY) INTO COUNTS FROM ORDER_RECORDS WHERE FOOD_ITEM=ITEM AND STATUS='ORDERED';
	SELECT QTY INTO AMOUNT_REQ FROM ITEM_QUANTITY WHERE MENU_TYPE=MENU_ID AND FOOD_TYPE=FOOD_ID;
	SET REM = AMOUNT_REQ - COUNTS;
 
 ELSE
	SELECT QTY INTO AMOUNT_REQ FROM ITEM_QUANTITY WHERE MENU_TYPE=MENU_ID AND FOOD_TYPE=FOOD_ID;
	SET REM=AMOUNT_REQ;
 END IF;
 IF (QUANTITY>REM)
 THEN
  
	SELECT 'OUT OF STOCK' AS COMMENTS;
 END IF;
 IF EXISTS(SELECT FOOD_TYPE FROM ITEM_QUANTITY WHERE MENU_TYPE=MENU_ID AND FOOD_TYPE IN(SELECT ID FROM SESSION_SCHEDULE WHERE CURTIME() BETWEEN START_TIME AND END_TIME))
 THEN
 IF FOOD_ID IN(SELECT ID FROM SESSION_SCHEDULE WHERE CURRENT_TIME() BETWEEN START_TIME AND END_TIME)
 THEN
	SELECT 'ORDER PLACED' AS COMMENTS;
	SELECT RATE INTO CHARGE FROM MENU_ITEMS WHERE FOOD_ITEMS=ITEM;
	SET TOTAL=QUANTITY*CHARGE;
	INSERT INTO ORDER_RECORDS(ID,SEAT_NO,FOOD_ITEM,QTY,BILL_AMOUNT,ORDER_DATE,STATUS) VALUES(ORDER_ID,SEAT,ITEM,QUANTITY,TOTAL,NOW(),'ORDERED');
 END IF;
 END IF;
 ELSE 
	SELECT 'NO SEATS';
 END IF;
 END $$
 
DELIMITER ;
